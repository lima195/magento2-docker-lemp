# Docker Lemp for Magento applications
version: '3.1'

services:
  nginx:
    container_name: app_nginx
    image: nginx:latest
    # build:
    #   context: .
    #   dockerfile: ./nginx/${NGINX_VERSION}/Dockerfile
    working_dir: ${WORKING_DIR}
    links:
      - php:app_php@
    volumes:
      #- ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro,cached
      - ./nginx/magento.conf:/etc/nginx/conf.d/default.conf:ro,cached
      - ./nginx/nginx.sample.conf:/etc/nginx/sites-available/nginx.sample.conf:ro,cached
      - ${WWW_DIR}:${WORKING_DIR}
      - appvendor:${WORKING_DIR}/vendor
      - apppubstatic:${WORKING_DIR}/pub/static
      - appgenerated:${WORKING_DIR}/generated
      - appvar:${WORKING_DIR}/var
    depends_on:
      - db
      - php
    ports:
      - 80:80

  php:
    container_name: app_php
    # image: lima195/php-fpm-${PHP_VERSION}:lastest
    # command: sh -c "/home/john/go/bin/MailHog"
    # Develop porpuses
    build:
      context: .
      dockerfile: ./php/7.4/Dockerfile
    # user: john
    working_dir: ${WORKING_DIR}
    volumes:
      - ./php/${PHP_VERSION}/${LOCAL_PHP_INI}:${DOCKER_PHP_INI}
      # - ./php/${PHP_VERSION}/${LOCAL_PHP_XDEBUG_INI}:${DOCKER_PHP_XDEBUG_INI}
      - ${WWW_DIR}:${WORKING_DIR}
      - appvendor:${WORKING_DIR}/vendor
      - apppubstatic:${WORKING_DIR}/pub/static
      - appgenerated:${WORKING_DIR}/generated
      - appvar:${WORKING_DIR}/var
    # depends_on:
    #   - db
    # ports:
    #   - 8025:8025

  adminer:
    container_name: app_adminer
    image: adminer
    links:
      - db
    ports:
      - 8080:8080

  db:
    platform: linux/x86_64
    container_name: app_mysql
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - ./volumes/mysql:/var/lib/mysql
    ports:
      - 3306:3306

  elasticsearch:
    platform: linux/x86_64
    container_name: app_elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
            #- elasticsearchvolume:/usr/share/elasticsearch/data
      - ./volume-elasticsearch/data:/usr/share/elasticsearch/data
      - ./volume-elasticsearch/plugins:/usr/share/elasticsearch/plugins

  # rabbitmq:
  #   container_name: app_rabbitmq
  #   image: rabbitmq:3-management-alpine
  #   environment:
  #     RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
  #     RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
  #   volumes:
  #     - rabbitmqvolume:/var/lib/rabbitmq/
  #     - rabbitmqvolume:/var/log/rabbitmq
  #   networks:
  #     - esnet

  # redis:
  #   container_name: app_redis
  #   image: redis:${REDIS_VERSION}
  #   command: redis-server --requirepass ${REDIS_PASS}
  #   volumes:
  #     - ./volumes/redis/data:/data
  #   networks:
  #     - esnet
  #   ports:
  #     - 6379:6379
  #     - 6380:6380
  #     - 6381:6381

volumes:
  elasticsearchvolume:
    driver: local
  # rabbitmqvolume:
  #   driver: local
  appvendor:
  apppubstatic:
  appgenerated:
  appvar:
